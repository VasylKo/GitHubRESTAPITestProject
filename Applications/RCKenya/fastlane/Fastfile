platform :ios do
  desc "Submit a new Dev Build to Amazon S3"
  lane :Dev do
    gym(
        scheme: "RCKenya",
        configuration: "DevRelease",
        output_directory: "Build",
        clean: true,
        use_legacy_build_api: true,
        ) # Build app
    s3(
       html_template_path: './fastlane/redcross.erb',
       html_file_name: 'dev.html',
       version_file_name: 'dev.version.json',
       upload_metadata: true,
       path: 'dev/v{CFBundleShortVersionString}_b{CFBundleVersion}/'
       )
  end

    desc "Submit a new Staging Build to Amazon S3"
    lane :Staging do
      gym(
        scheme: "RCKenya",
        configuration: "StagingRelease",
        output_directory: "Build",
        clean: true,
        use_legacy_build_api: true,
        ) # Build app
        #      snapshot
      s3(
         html_template_path: './fastlane/redcross.erb',
         html_file_name: 'staging.html',
         version_file_name: 'staging.version.json',
         upload_metadata: true,
         path: 'staging/v{CFBundleShortVersionString}_b{CFBundleVersion}/'
         )
    end

    desc "Submit a new Staging 2 Build to Amazon S3"
    lane :Staging2 do
        gym(
            scheme: "RCKenya",
            configuration: "StagingReleaseCopy",
            output_directory: "Build",
            clean: true,
            use_legacy_build_api: true,
            ) # Build app
            #      snapshot
            s3(
               html_template_path: './fastlane/redcross.erb',
               html_file_name: 'staging2.html',
               version_file_name: 'staging2.version.json',
               upload_metadata: true,
               path: 'staging2/v{CFBundleShortVersionString}_b{CFBundleVersion}/'
               )
    end


    desc "Submit a new Production Build to Amazon S3"
    lane :Production do
        gym(
            scheme: "RCKenya",
            configuration: "ProdRelease",
            output_directory: "Build",
            clean: true,
            use_legacy_build_api: true,
            ) # Build app
#        snapshot
        s3(
           html_template_path: './fastlane/redcross.erb',
           html_file_name: 'production.html',
           version_file_name: 'production.version.json',
           upload_metadata: true,
           path: 'prod/v{CFBundleShortVersionString}_b{CFBundleVersion}/'
           )
    end

    desc "Submit a new Production 2 (Kenya Red Cross) Build to Amazon S3"
    lane :Production2 do
        gym(
            scheme: "RCKenya",
            configuration: "ProdRelease2",
            output_directory: "Build",
            clean: true,
            use_legacy_build_api: true,
            ) # Build app
#        snapshot
        s3(
            html_template_path: './fastlane/redcross.erb',
            html_file_name: 'production.html',
            version_file_name: 'production.version.json',
            upload_metadata: true,
            path: 'prod/v{CFBundleShortVersionString}_b{CFBundleVersion}/'
            )
    end
end


# More information about multiple platforms in fastlane:
# https://github.com/KrauseFx/fastlane/blob/master/docs/Platforms.md
